{"version":3,"file":"4514.app.js","mappings":";;;;;;;;;;;;AAAO;AACP;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;EC/DA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA;EAAA;;;;;;;;;EAAA;EAAA;;;;;;;;;;;;;;;;;EAAA;EAAA;;;;;EAAA,uEAkGsC,EAAE,EAAC,oCAAoC;IAlG7E,mCAkG0B,CAAmE;UAlG7F;QAAA;;;UAAA,kCAkG8E,IAAE;;;;IAlGhF;;EAAA;;;;;;;;;;;;;;;EAAA;EAAA;;;;;AEA2E;AAC3E;AACA,CAAmC;AACnC;AACA,iDAAiD,2BAAa;AAC9D;AACA,SAAS,SAAS;AAClB;;;AAGA,kDAAe","sources":["webpack:///./.vuepress/.temp/pages/6.x/official-account/server.html.js","webpack:///./.vuepress/.temp/pages/6.x/official-account/server.html.vue","webpack:///./.vuepress/.temp/pages/6.x/official-account/server.html.vue?796e","webpack:///./.vuepress/.temp/pages/6.x/official-account/server.html.vue?7506"],"sourcesContent":["export const data = {\n  \"key\": \"v-7e6302cc\",\n  \"path\": \"/6.x/official-account/server.html\",\n  \"title\": \"服务端\",\n  \"lang\": \"en-US\",\n  \"frontmatter\": {},\n  \"excerpt\": \"\",\n  \"headers\": [\n    {\n      \"level\": 3,\n      \"title\": \"中间件模式\",\n      \"slug\": \"中间件模式\",\n      \"children\": []\n    },\n    {\n      \"level\": 3,\n      \"title\": \"回复消息\",\n      \"slug\": \"回复消息\",\n      \"children\": []\n    },\n    {\n      \"level\": 3,\n      \"title\": \"使用独立的中间件类\",\n      \"slug\": \"使用独立的中间件类\",\n      \"children\": []\n    },\n    {\n      \"level\": 3,\n      \"title\": \"使用 callable 类型中间件\",\n      \"slug\": \"使用-callable-类型中间件\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"注册指定消息类型的消息处理器\",\n      \"slug\": \"注册指定消息类型的消息处理器\",\n      \"children\": [\n        {\n          \"level\": 3,\n          \"title\": \"处理普通消息\",\n          \"slug\": \"处理普通消息\",\n          \"children\": []\n        },\n        {\n          \"level\": 3,\n          \"title\": \"处理事件消息\",\n          \"slug\": \"处理事件消息\",\n          \"children\": []\n        }\n      ]\n    },\n    {\n      \"level\": 2,\n      \"title\": \"完整示例\",\n      \"slug\": \"完整示例\",\n      \"children\": []\n    }\n  ],\n  \"filePathRelative\": \"6.x/official-account/server.md\",\n  \"git\": {\n    \"updatedTime\": 1629906046000,\n    \"contributors\": []\n  }\n}\n","<h1 id=\"服务端\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#服务端\" aria-hidden=\"true\">#</a> 服务端</h1>\n<p>你可以通过 <code>$app-&gt;getServer()</code> 获取服务端模块，<strong>服务端模块默认处理了服务端验证的逻辑</strong>：</p>\n<div class=\"language-php ext-php line-numbers-mode\"><pre v-pre class=\"language-php\"><code><span class=\"token keyword\">use</span> <span class=\"token package\">EasyWeChat<span class=\"token punctuation\">\\</span>OfficialAccount<span class=\"token punctuation\">\\</span>Application</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$config</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$app</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Application</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$config</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$server</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$app</span><span class=\"token operator\">-></span><span class=\"token function\">getServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br></div></div><h3 id=\"中间件模式\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#中间件模式\" aria-hidden=\"true\">#</a> 中间件模式</h3>\n<p>与 5.x 的设计类似，服务端使用中间件模式来依次调用开发者注册的中间件：</p>\n<div class=\"language-php ext-php line-numbers-mode\"><pre v-pre class=\"language-php\"><code><span class=\"token variable\">$server</span><span class=\"token operator\">-></span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$message</span><span class=\"token punctuation\">,</span> <span class=\"token class-name class-name-fully-qualified type-declaration\"><span class=\"token punctuation\">\\</span>Closure</span> <span class=\"token variable\">$next</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 你的自定义逻辑</span>\n    <span class=\"token keyword\">return</span> <span class=\"token variable\">$next</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$message</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$response</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$server</span><span class=\"token operator\">-></span><span class=\"token function\">serve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br></div></div><p>你可以注册多个中间件来处理不同的情况：</p>\n<div class=\"language-php ext-php line-numbers-mode\"><pre v-pre class=\"language-php\"><code><span class=\"token variable\">$server</span>\n    <span class=\"token operator\">-></span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$message</span><span class=\"token punctuation\">,</span> <span class=\"token class-name class-name-fully-qualified type-declaration\"><span class=\"token punctuation\">\\</span>Closure</span> <span class=\"token variable\">$next</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 你的自定义逻辑1</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$next</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$message</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">-></span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$message</span><span class=\"token punctuation\">,</span> <span class=\"token class-name class-name-fully-qualified type-declaration\"><span class=\"token punctuation\">\\</span>Closure</span> <span class=\"token variable\">$next</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 你的自定义逻辑2</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$next</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$message</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">-></span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$message</span><span class=\"token punctuation\">,</span> <span class=\"token class-name class-name-fully-qualified type-declaration\"><span class=\"token punctuation\">\\</span>Closure</span> <span class=\"token variable\">$next</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 你的自定义逻辑3</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$next</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$message</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$response</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$server</span><span class=\"token operator\">-></span><span class=\"token function\">serve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br><span class=\"line-number\">15</span><br></div></div><h3 id=\"回复消息\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#回复消息\" aria-hidden=\"true\">#</a> 回复消息</h3>\n<p>当你在中间件里不回复消息时，你将要传递消息给下一个中间件：</p>\n<div class=\"language-php ext-php line-numbers-mode\"><pre v-pre class=\"language-php\"><code><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$message</span><span class=\"token punctuation\">,</span> <span class=\"token class-name class-name-fully-qualified type-declaration\"><span class=\"token punctuation\">\\</span>Closure</span> <span class=\"token variable\">$next</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 你的自定义逻辑3</span>\n    <span class=\"token keyword\">return</span> <span class=\"token variable\">$next</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$message</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br></div></div><p>如果此时你需要返回消息给用户，你可以直接像下面这样回复消息内容：</p>\n<div class=\"language-php ext-php line-numbers-mode\"><pre v-pre class=\"language-php\"><code><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$message</span><span class=\"token punctuation\">,</span> <span class=\"token class-name class-name-fully-qualified type-declaration\"><span class=\"token punctuation\">\\</span>Closure</span> <span class=\"token variable\">$next</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string single-quoted-string\">'感谢你使用 EasyWeChat'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div></div><blockquote>\n<p>注意：回复消息后其他没运行的中间件将不再执行，所以请你将全局都需要执行的中间件优先提前注册。</p>\n</blockquote>\n<p>其他类型的消息时，请直接参考 <strong><a href=\"https://developers.weixin.qq.com/doc/offiaccount/Message_Management/Passive_user_reply_message.html\" target=\"_blank\" rel=\"noopener noreferrer\">官方文档消息的 XML 结构<OutboundLink/></a></strong> 以数组形式返回即可。</p>\n<p>需要省略 <code>ToUserName</code>、<code>FromUserName</code> 和 <code>CreateTime</code>，以回复图片消息为例:</p>\n<div class=\"language-php ext-php line-numbers-mode\"><pre v-pre class=\"language-php\"><code><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$message</span><span class=\"token punctuation\">,</span> <span class=\"token class-name class-name-fully-qualified type-declaration\"><span class=\"token punctuation\">\\</span>Closure</span> <span class=\"token variable\">$next</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string single-quoted-string\">'MsgType'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'image'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string single-quoted-string\">'Image'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n            <span class=\"token string single-quoted-string\">'MediaId'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'media_id'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br></div></div><h4 id=\"怎么发送多条消息\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#怎么发送多条消息\" aria-hidden=\"true\">#</a> 怎么发送多条消息？</h4>\n<p>服务端只能回复一条消息，如果你想在接收到消息时向用户发送多条消息，你可以调用 <strong><a href=\"https://developers.weixin.qq.com/doc/offiaccount/Message_Management/Service_Center_messages.html\" target=\"_blank\" rel=\"noopener noreferrer\">客服消息<OutboundLink/></a></strong> 接口来发送多条。</p>\n<h3 id=\"使用独立的中间件类\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#使用独立的中间件类\" aria-hidden=\"true\">#</a> 使用独立的中间件类</h3>\n<p>当然，中间件也支持多种类型，比如你可以使用一个独立的类作为中间件：</p>\n<div class=\"language-php ext-php line-numbers-mode\"><pre v-pre class=\"language-php\"><code><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">MyCustomHandler</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__invoke</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$message</span><span class=\"token punctuation\">,</span> <span class=\"token class-name class-name-fully-qualified type-declaration\"><span class=\"token punctuation\">\\</span>Closure</span> <span class=\"token variable\">$next</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$message</span><span class=\"token operator\">-></span><span class=\"token property\">MsgType</span> <span class=\"token operator\">===</span> <span class=\"token string single-quoted-string\">'text'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">//...</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$next</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$message</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br></div></div><p>注册中间件：</p>\n<div class=\"language-php ext-php line-numbers-mode\"><pre v-pre class=\"language-php\"><code><span class=\"token variable\">$server</span><span class=\"token operator\">-></span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">MyCustomHandler</span><span class=\"token operator\">::</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 或者</span>\n\n<span class=\"token variable\">$server</span><span class=\"token operator\">-></span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MyCustomHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br></div></div><h3 id=\"使用-callable-类型中间件\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#使用-callable-类型中间件\" aria-hidden=\"true\">#</a> 使用 callable 类型中间件</h3>\n<p>中间件支持 <strong><a href=\"http://php.net/manual/zh/language.types.callable.php\" target=\"_blank\" rel=\"noopener noreferrer\"><code>callable</code><OutboundLink/></a></strong> 类型的参数，所以你不一定要传入一个闭包（Closure），你可以选择传入一个函数名，一个 <code>[$class, $method]</code> 或者 <code>Foo::bar</code> 这样的类型。</p>\n<div class=\"language-php ext-php line-numbers-mode\"><pre v-pre class=\"language-php\"><code><span class=\"token variable\">$server</span><span class=\"token operator\">-></span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$object</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'method'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$server</span><span class=\"token operator\">-></span><span class=\"token function\">with</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'ClassName::method'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br></div></div><h2 id=\"注册指定消息类型的消息处理器\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#注册指定消息类型的消息处理器\" aria-hidden=\"true\">#</a> 注册指定消息类型的消息处理器</h2>\n<p>为了方便开发者处理消息推送，server 类内置了两个便捷方法：</p>\n<h3 id=\"处理普通消息\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#处理普通消息\" aria-hidden=\"true\">#</a> 处理普通消息</h3>\n<p>当普通微信用户向公众账号发消息时被调用，且匹配对应的事件类型：</p>\n<div class=\"language-php ext-php line-numbers-mode\"><pre v-pre class=\"language-php\"><code><span class=\"token variable\">$server</span><span class=\"token operator\">-></span><span class=\"token function\">addMessageListener</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'text'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br></div></div><p><strong>参数</strong></p>\n<ul>\n<li>参数 1 为消息类型，也就是 message 中的 <code>MsgType</code> 字段，例如：<code>image</code>;</li>\n<li>参数 2 是中间件，也就是上面讲到的多种类型的中间件。</li>\n</ul>\n<h3 id=\"处理事件消息\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#处理事件消息\" aria-hidden=\"true\">#</a> 处理事件消息</h3>\n<p>事件消息中间件仅在推送事件消息时被调用，且匹配对应的事件类型：</p>\n<div class=\"language-php ext-php line-numbers-mode\"><pre v-pre class=\"language-php\"><code><span class=\"token variable\">$server</span><span class=\"token operator\">-></span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'subscribe'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br></div></div><p><strong>参数</strong></p>\n<ul>\n<li>参数 1 为事件类型，也就是 message 中的 <code>Event</code> 字段，例如：<code>subscribe</code>;</li>\n<li>参数 2 是中间件，也就是上面讲到的多种类型的中间件。</li>\n</ul>\n<p>关于回复消息的结构，可以查阅 <strong><RouterLink to=\"/6.x/official-account/message.html\">消息</RouterLink></strong> 章节了解更多。</p>\n<h2 id=\"完整示例\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#完整示例\" aria-hidden=\"true\">#</a> 完整示例</h2>\n<p>以下示例完成了服务端验证，自定义中间件回复等逻辑：</p>\n<div class=\"language-php ext-php line-numbers-mode\"><pre v-pre class=\"language-php\"><code><span class=\"token keyword\">use</span> <span class=\"token package\">EasyWeChat<span class=\"token punctuation\">\\</span>OfficialAccount<span class=\"token punctuation\">\\</span>Application</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$config</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$app</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Application</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$config</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$server</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$app</span><span class=\"token operator\">-></span><span class=\"token function\">getServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$server</span><span class=\"token operator\">-></span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'subscribe'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$message</span><span class=\"token punctuation\">,</span> <span class=\"token class-name class-name-fully-qualified type-declaration\"><span class=\"token punctuation\">\\</span>Closure</span> <span class=\"token variable\">$next</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string single-quoted-string\">'感谢您关注 EasyWeChat!'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$response</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$server</span><span class=\"token operator\">-></span><span class=\"token function\">serve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token variable\">$response</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br></div></div><blockquote>\n<p><code>$response</code> 是一个 <a href=\"https://github.com/php-fig/http-message/blob/master/src/ResponseInterface.php\" target=\"_blank\" rel=\"noopener noreferrer\">Psr\\Http\\Message\\ResponseInterface<OutboundLink/></a> 实现，所以请自己决定如何适配您的框架。</p>\n</blockquote>\n","export * from \"-!../../../../../node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[1]!../../../../../node_modules/@vuepress/bundler-webpack/lib/build/ssr/vuepressLoader.js!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./server.html.vue?vue&type=template&id=22476590\"","import { ssrRender } from \"./server.html.vue?vue&type=template&id=22476590\"\nconst script = {}\nimport { ssrContextKey } from 'vue'\nscript.ssrRender = (...args) => {\n  const ssrContext = args[2].appContext.provides[ssrContextKey]\n  ssrContext._registeredComponents.add(\"/home/runner/work/easywechat/easywechat/docs/node_modules/@vuepress/bundler-webpack/lib/build/ssr/vuepressLoader.js!/home/runner/work/easywechat/easywechat/docs/node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!/home/runner/work/easywechat/easywechat/docs/.vuepress/.temp/pages/6.x/official-account/server.html.vue\")\n  return ssrRender(...args)\n}\n\n\nexport default script"],"names":[],"sourceRoot":""}