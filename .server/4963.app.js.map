{"version":3,"file":"4963.app.js","mappings":";;;;;;;;;;;;AAAO;AACP;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ECbA;;;;;;;;;;ACAgF;AAChF;AACA,CAAmC;AACnC;AACA,iDAAiD,2BAAa;AAC9D;AACA,SAAS,SAAS;AAClB;;;AAGA,uDAAe","sources":["webpack:///./.vuepress/.temp/pages/4.x/micro-merchant/certficates.html.js","webpack:///./.vuepress/.temp/pages/4.x/micro-merchant/certficates.html.vue","webpack:///./.vuepress/.temp/pages/4.x/micro-merchant/certficates.html.vue?fc7b"],"sourcesContent":["export const data = {\n  \"key\": \"v-29b34aa0\",\n  \"path\": \"/4.x/micro-merchant/certficates.html\",\n  \"title\": \"获取平台证书\",\n  \"lang\": \"en-US\",\n  \"frontmatter\": {},\n  \"excerpt\": \"\",\n  \"headers\": [],\n  \"filePathRelative\": \"4.x/micro-merchant/certficates.md\",\n  \"git\": {\n    \"updatedTime\": 1629906046000,\n    \"contributors\": []\n  }\n}\n","<h1 id=\"获取平台证书\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#获取平台证书\" aria-hidden=\"true\">#</a> 获取平台证书</h1>\n<p>调用获取平台证书接口之前，请前往微信支付商户平台升级API证书，升级后才可成功调用本接口。</p>\n<div class=\"language-php ext-php line-numbers-mode\"><pre v-pre class=\"language-php\"><code><span class=\"token comment\">// 获取到证书后可以做缓存处理，无需每次重新获取</span>\n<span class=\"token variable\">$response</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$app</span><span class=\"token operator\">-></span><span class=\"token property\">certficates</span><span class=\"token operator\">-></span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword type-hint\">bool</span> <span class=\"token variable\">$returnRaw</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 获取到平台证书后，可以直接使用 setCertificate 方法把证书配置追加到配置项里面去</span>\n<span class=\"token variable\">$app</span><span class=\"token operator\">-></span><span class=\"token function\">setCertificate</span><span class=\"token punctuation\">(</span><span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$certificate</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$serialNo</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br></div></div><blockquote>\n<p>$returnRaw 不填默认为false时，请确保你的PHP已安装了sodium扩展<br>\n返回值：固定array格式的解密后的证书信息</p>\n</blockquote>\n<blockquote>\n<p>$returnRaw 传入true时<br>\n返回值：Response对象<code>$response-&gt;getBody()-&gt;getContents();</code>获取到微信返回xml原始数据</p>\n</blockquote>\n","import { ssrRender } from \"./certficates.html.vue?vue&type=template&id=6dbd62e6\"\nconst script = {}\nimport { ssrContextKey } from 'vue'\nscript.ssrRender = (...args) => {\n  const ssrContext = args[2].appContext.provides[ssrContextKey]\n  ssrContext._registeredComponents.add(\"/home/runner/work/easywechat/easywechat/docs/node_modules/@vuepress/bundler-webpack/lib/build/ssr/vuepressLoader.js!/home/runner/work/easywechat/easywechat/docs/node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!/home/runner/work/easywechat/easywechat/docs/.vuepress/.temp/pages/4.x/micro-merchant/certficates.html.vue\")\n  return ssrRender(...args)\n}\n\n\nexport default script"],"names":[],"sourceRoot":""}