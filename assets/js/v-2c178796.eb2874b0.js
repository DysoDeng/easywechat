"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9187],{50734:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-2c178796",path:"/6.x/common/logging.html",title:"日志",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"日志配置",slug:"日志配置",children:[{level:3,title:"自定义日志驱动",slug:"自定义日志驱动",children:[]}]}],filePathRelative:"6.x/common/logging.md",git:{updatedTime:1629906046e3,contributors:[]}}},19719:(n,s,a)=>{a.r(s),a.d(s,{default:()=>x});var e=a(66252);const t=(0,e._)("h1",{id:"日志",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#日志","aria-hidden":"true"},"#"),(0,e.Uk)(" 日志")],-1),l=(0,e.Uk)("如果没有在配置中指定日志选项，将不会记录任何日志。仅在配置了相关日志策略时启用，配置详细请参考："),p=(0,e.Uk)("配置"),o=(0,e._)("h2",{id:"日志配置",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#日志配置","aria-hidden":"true"},"#"),(0,e.Uk)(" 日志配置")],-1),c=(0,e._)("p",null,[(0,e.Uk)("你可以配置多个日志的 "),(0,e._)("code",null,"channel"),(0,e.Uk)("，每个 "),(0,e._)("code",null,"channel"),(0,e.Uk)(" 里的 "),(0,e._)("code",null,"driver"),(0,e.Uk)(" 对应不同的日志驱动，内置可用的 "),(0,e._)("code",null,"driver"),(0,e.Uk)(" 如下表：")],-1),u=(0,e._)("thead",null,[(0,e._)("tr",null,[(0,e._)("th",null,"名称"),(0,e._)("th",null,"描述")])],-1),r=(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("code",null,"stack")]),(0,e._)("td",null,"复合型，可以包含下面多种驱动的混合模式")],-1),i=(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("code",null,"single")]),(0,e._)("td",null,[(0,e.Uk)("基于 "),(0,e._)("code",null,"StreamHandler"),(0,e.Uk)(" 的单一文件日志，参数有 "),(0,e._)("code",null,"path"),(0,e.Uk)("，"),(0,e._)("code",null,"level")])],-1),k=(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("code",null,"daily")]),(0,e._)("td",null,[(0,e.Uk)("基于 "),(0,e._)("code",null,"RotatingFileHandler"),(0,e.Uk)(" 按日期生成日志文件，参数有 "),(0,e._)("code",null,"path"),(0,e.Uk)("，"),(0,e._)("code",null,"level"),(0,e.Uk)("，"),(0,e._)("code",null,"days"),(0,e.Uk)("(默认 7 天)")])],-1),d=(0,e._)("td",null,[(0,e._)("code",null,"slack")],-1),g=(0,e.Uk)("基于 "),b=(0,e._)("code",null,"SlackWebhookHandler",-1),m=(0,e.Uk)(" 的 Slack 组件，参数请参考源码："),_={href:"https://github.com/w7corp/wechat/blob/master/src/Kernel/Log/LogManager.php#L247",target:"_blank",rel:"noopener noreferrer"},h=(0,e.Uk)("LogManager.php"),v=(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("code",null,"syslog")]),(0,e._)("td",null,[(0,e.Uk)("基于 "),(0,e._)("code",null,"SyslogHandler"),(0,e.Uk)(" Monolog 驱动，参数有 "),(0,e._)("code",null,"facility"),(0,e.Uk)(" 默认为 "),(0,e._)("code",null,"LOG_USER"),(0,e.Uk)("，"),(0,e._)("code",null,"level")])],-1),U=(0,e._)("tr",null,[(0,e._)("td",null,[(0,e._)("code",null,"errorlog")]),(0,e._)("td",null,[(0,e.Uk)("记录日志到系统错误日志，基于 "),(0,e._)("code",null,"ErrorLogHandler"),(0,e.Uk)("，参数有 "),(0,e._)("code",null,"type"),(0,e.Uk)("，默认为 "),(0,e._)("code",null,"ErrorLogHandler::OPERATING_SYSTEM")])],-1),f=(0,e._)("h3",{id:"自定义日志驱动",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#自定义日志驱动","aria-hidden":"true"},"#"),(0,e.Uk)(" 自定义日志驱动")],-1),y=(0,e.Uk)("由于日志使用的是 "),q={href:"https://github.com/Seldaek/monolog",target:"_blank",rel:"noopener noreferrer"},w=(0,e.Uk)("Monolog"),L=(0,e.Uk)("，所以，除了默认的文件式日志外，你可以自定义日志处理器："),H=(0,e.uE)('<div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Monolog<span class="token punctuation">\\</span>Logger</span><span class="token punctuation">;</span>\n<span class="token keyword">use</span> <span class="token package">Monolog<span class="token punctuation">\\</span>Handler<span class="token punctuation">\\</span>RotatingFileHandler</span><span class="token punctuation">;</span>\n\n\n<span class="token comment">// 注册自定义日志</span>\n<span class="token variable">$app</span><span class="token operator">-&gt;</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;mylog&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token variable">$app</span><span class="token punctuation">,</span> <span class="token variable">$config</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Logger</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseChannel</span><span class="token punctuation">(</span><span class="token variable">$config</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>\n        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">prepareHandler</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RotatingFileHandler</span><span class="token punctuation">(</span>\n            <span class="token variable">$config</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;path&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$config</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;days&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">level</span><span class="token punctuation">(</span><span class="token variable">$config</span><span class="token punctuation">)</span>\n        <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><blockquote><p>{info} 在你自定义的闭包函数中，可以使用 <code>EasyWeChat\\Kernel\\Log\\LogManager</code> 中的方法，具体请查看 SDK 源代码。</p></blockquote><p>配置文件中在 <code>driver</code> 部分即可使用你自定义的驱动了：</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token string single-quoted-string">&#39;logging&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>\n    <span class="token string single-quoted-string">&#39;default&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;dev&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 默认使用的 channel，生产环境可以改为下面的 prod</span>\n    <span class="token string single-quoted-string">&#39;channels&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>\n        <span class="token comment">// 测试环境</span>\n        <span class="token string single-quoted-string">&#39;dev&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>\n            <span class="token string single-quoted-string">&#39;driver&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;mylog&#39;</span><span class="token punctuation">,</span>\n            <span class="token string single-quoted-string">&#39;path&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;/tmp/easywechat.log&#39;</span><span class="token punctuation">,</span>\n            <span class="token string single-quoted-string">&#39;level&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;debug&#39;</span><span class="token punctuation">,</span>\n            <span class="token string single-quoted-string">&#39;days&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">5</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n\n        <span class="token comment">//...</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>',4),x={render:function(n,s){const a=(0,e.up)("RouterLink"),x=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[t,(0,e._)("p",null,[l,(0,e.Wm)(a,{to:"/6.x/common/config.html"},{default:(0,e.w5)((()=>[p])),_:1})]),o,c,(0,e._)("table",null,[u,(0,e._)("tbody",null,[r,i,k,(0,e._)("tr",null,[d,(0,e._)("td",null,[g,b,m,(0,e._)("a",_,[h,(0,e.Wm)(x)])])]),v,U])]),f,(0,e._)("p",null,[y,(0,e._)("a",q,[w,(0,e.Wm)(x)]),L]),H],64)}}}}]);
//# sourceMappingURL=v-2c178796.eb2874b0.js.map