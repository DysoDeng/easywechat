"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5344],{783:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-2478ea60",path:"/3.x/access_token.html",title:"Access Token",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"修改 $app 的 Access Token",slug:"修改-app-的-access-token",children:[]},{level:2,title:"设置 AccessToken 的缓存",slug:"设置-accesstoken-的缓存",children:[]}],filePathRelative:"3.x/access_token.md",git:{updatedTime:1629906046e3,contributors:[]}}},33827:(n,s,a)=>{a.r(s),a.d(s,{default:()=>m});var e=a(66252);const p=(0,e._)("h1",{id:"access-token",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#access-token","aria-hidden":"true"},"#"),(0,e.Uk)(" Access Token")],-1),t=(0,e.Uk)("SDK 中有一个 "),c={href:"https://github.com/overtrue/wechat/blob/master/src/Core/AccessToken.php",target:"_blank",rel:"noopener noreferrer"},o=(0,e.Uk)("Access Token"),l=(0,e.Uk)(" 对象，它是一个全局使用的东西，请把它与 OAuth 中的 code 换取的 Access Token 区别开。"),r=(0,e.uE)('<p>我们一个 SDK 应用在初始化以后，你可以在任何时机从应用中拿到该配置下的 Access Token 实例：</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">EasyWeChat<span class="token punctuation">\\</span>Foundation<span class="token punctuation">\\</span>Application</span><span class="token punctuation">;</span>\n\n<span class="token variable">$options</span> <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token comment">//...</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token variable">$app</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Application</span><span class="token punctuation">(</span><span class="token variable">$options</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 获取 access token 实例</span>\n<span class="token variable">$accessToken</span> <span class="token operator">=</span> <span class="token variable">$app</span><span class="token operator">-&gt;</span><span class="token property">access_token</span><span class="token punctuation">;</span> <span class="token comment">// EasyWeChat\\Core\\AccessToken 实例</span>\n<span class="token variable">$token</span> <span class="token operator">=</span> <span class="token variable">$accessToken</span><span class="token operator">-&gt;</span><span class="token function">getToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// token 字符串</span>\n<span class="token variable">$token</span> <span class="token operator">=</span> <span class="token variable">$accessToken</span><span class="token operator">-&gt;</span><span class="token function">getToken</span><span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 强制重新从微信服务器获取 token.</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="修改-app-的-access-token" tabindex="-1"><a class="header-anchor" href="#修改-app-的-access-token" aria-hidden="true">#</a> 修改 <code>$app</code> 的 Access Token</h2><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$app</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;access_token&#39;</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token function">setToken</span><span class="token punctuation">(</span><span class="token variable">$newAccessToken</span><span class="token punctuation">,</span> <span class="token variable">$expires</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>例如：</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code><span class="token variable">$app</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;access_token&#39;</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token function">setToken</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;ccfdec35bd7ba359f6101c2da321d675&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 或者指定过期时间</span>\n<span class="token variable">$app</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;access_token&#39;</span><span class="token punctuation">]</span><span class="token operator">-&gt;</span><span class="token function">setToken</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;ccfdec35bd7ba359f6101c2da321d675&#39;</span><span class="token punctuation">,</span> <span class="token number">3600</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 单位：秒</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="设置-accesstoken-的缓存" tabindex="-1"><a class="header-anchor" href="#设置-accesstoken-的缓存" aria-hidden="true">#</a> 设置 AccessToken 的缓存</h2><p>你也可以自定义 token 的缓存方式，把一个实现了 <code>Doctrine\\Common\\Cache\\Cache</code> 缓存接口的实例作为 AccessToken 构造函数的第三个参数传入即可：</p>',8),i=(0,e.Uk)("本项目使用 "),u={href:"https://github.com/doctrine/cache",target:"_blank",rel:"noopener noreferrer"},k=(0,e.Uk)("doctrine/cache"),b=(0,e.Uk)(" 来完成缓存工作，它支持几乎目前所有的缓存引擎。"),d=(0,e.uE)('<p>以 Redis 为例：</p><div class="language-php ext-php line-numbers-mode"><pre class="language-php"><code>\n<span class="token keyword">use</span> <span class="token package">Doctrine<span class="token punctuation">\\</span>Common<span class="token punctuation">\\</span>Cache<span class="token punctuation">\\</span>RedisCache</span><span class="token punctuation">;</span> <span class="token comment">// RedisCache 实例了 `Doctrine\\Common\\Cache\\Cache` 接口</span>\n\n<span class="token variable">$cache</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RedisCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 创建 redis 实例</span>\n<span class="token variable">$redis</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Redis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token variable">$redis</span><span class="token operator">-&gt;</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;redis_host&#39;</span><span class="token punctuation">,</span> <span class="token number">6379</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token variable">$cache</span><span class="token operator">-&gt;</span><span class="token function">setRedis</span><span class="token punctuation">(</span><span class="token variable">$redis</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token variable">$app</span><span class="token operator">-&gt;</span><span class="token property">access_token</span><span class="token operator">-&gt;</span><span class="token function">setCache</span><span class="token punctuation">(</span><span class="token variable">$cache</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>',2),m={render:function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[p,(0,e._)("p",null,[t,(0,e._)("a",c,[o,(0,e.Wm)(a)]),l]),r,(0,e._)("p",null,[i,(0,e._)("a",u,[k,(0,e.Wm)(a)]),b]),d],64)}}}}]);
//# sourceMappingURL=v-2478ea60.6ea929a4.js.map