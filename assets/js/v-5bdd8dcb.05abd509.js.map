{"version":3,"file":"assets/js/v-5bdd8dcb.05abd509.js","mappings":"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","sources":["webpack:///./.vuepress/.temp/pages/3.x/server.html.js","webpack:///./.vuepress/.temp/pages/3.x/server.html.vue","webpack:///./.vuepress/.temp/pages/3.x/server.html.vue?11eb"],"sourcesContent":["export const data = {\n  \"key\": \"v-5bdd8dcb\",\n  \"path\": \"/3.x/server.html\",\n  \"title\": \"服务端\",\n  \"lang\": \"en-US\",\n  \"frontmatter\": {},\n  \"excerpt\": \"\",\n  \"headers\": [\n    {\n      \"level\": 2,\n      \"title\": \"基本使用\",\n      \"slug\": \"基本使用\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"请求消息的属性\",\n      \"slug\": \"请求消息的属性\",\n      \"children\": [\n        {\n          \"level\": 3,\n          \"title\": \"文本：\",\n          \"slug\": \"文本\",\n          \"children\": []\n        },\n        {\n          \"level\": 3,\n          \"title\": \"图片：\",\n          \"slug\": \"图片\",\n          \"children\": []\n        },\n        {\n          \"level\": 3,\n          \"title\": \"语音：\",\n          \"slug\": \"语音\",\n          \"children\": []\n        },\n        {\n          \"level\": 3,\n          \"title\": \"视频：\",\n          \"slug\": \"视频\",\n          \"children\": []\n        },\n        {\n          \"level\": 3,\n          \"title\": \"小视频：\",\n          \"slug\": \"小视频\",\n          \"children\": []\n        },\n        {\n          \"level\": 3,\n          \"title\": \"事件：\",\n          \"slug\": \"事件\",\n          \"children\": []\n        },\n        {\n          \"level\": 3,\n          \"title\": \"地理位置：\",\n          \"slug\": \"地理位置\",\n          \"children\": []\n        },\n        {\n          \"level\": 3,\n          \"title\": \"链接：\",\n          \"slug\": \"链接\",\n          \"children\": []\n        }\n      ]\n    },\n    {\n      \"level\": 2,\n      \"title\": \"回复消息\",\n      \"slug\": \"回复消息\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"消息转发给客服系统\",\n      \"slug\": \"消息转发给客服系统\",\n      \"children\": []\n    }\n  ],\n  \"filePathRelative\": \"3.x/server.md\",\n  \"git\": {\n    \"updatedTime\": 1629906046000,\n    \"contributors\": []\n  }\n}\n","<h1 id=\"服务端\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#服务端\" aria-hidden=\"true\">#</a> 服务端</h1>\n<p>我们在入门小教程一节以服务端为例讲解了一个基本的消息的处理，这里就不再讲服务器验证的流程了，请直接参考前面的入门实例即可。</p>\n<p>服务端的作用呢，在整个微信开发中主要是负责 <strong><a href=\"http://mp.weixin.qq.com/wiki/10/79502792eef98d6e0c6e1739da387346.html\" target=\"_blank\" rel=\"noopener noreferrer\">接收用户发送过来的消息<OutboundLink/></a></strong>，还有 <strong><a href=\"http://mp.weixin.qq.com/wiki/2/5baf56ce4947d35003b86a9805634b1e.html\" target=\"_blank\" rel=\"noopener noreferrer\">用户触发的一系列事件<OutboundLink/></a></strong>。</p>\n<p>首先我们得厘清一下消息与事件的回复，当你收到用户消息后（消息由微信服务器推送到你的服务器），在你对消息进行一些处理后，不管是选择回复一个消息还是什么不都回给用户，你也应该给微信服务器一个 “答复”，如果是选择回复一条消息，就直接返回一个消息xml就好，如果选择不作任何回复，你也得回复一个空字符串或者字符串 <code>SUCCESS</code>（不然用户就会看到 <code>该公众号暂时无法提供服务</code>）。</p>\n<h2 id=\"基本使用\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#基本使用\" aria-hidden=\"true\">#</a> 基本使用</h2>\n<p>在 SDK 中呢，使用 <code>setMessageHandler(callable $callback)</code> 来设置消息处理函数：</p>\n<div class=\"language-php ext-php line-numbers-mode\"><pre v-pre class=\"language-php\"><code><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">EasyWeChat<span class=\"token punctuation\">\\</span>Foundation<span class=\"token punctuation\">\\</span>Application</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ...</span>\n\n<span class=\"token variable\">$app</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Application</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$options</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 从项目实例中得到服务端应用实例。</span>\n<span class=\"token variable\">$server</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$app</span><span class=\"token operator\">-></span><span class=\"token property\">server</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$server</span><span class=\"token operator\">-></span><span class=\"token function\">setMessageHandler</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// $message->FromUserName // 用户的 openid</span>\n    <span class=\"token comment\">// $message->MsgType // 消息类型：event, text....</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"您好！欢迎关注我!\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$response</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$server</span><span class=\"token operator\">-></span><span class=\"token function\">serve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$response</span><span class=\"token operator\">-></span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Laravel 里请使用：return $response;</span>\n</span></code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br><span class=\"line-number\">15</span><br><span class=\"line-number\">16</span><br><span class=\"line-number\">17</span><br><span class=\"line-number\">18</span><br><span class=\"line-number\">19</span><br></div></div><p>这里我们使用 <code>setMessageHandler</code> 传入了一个 <strong>闭包（<a href=\"http://php.net/manual/en/class.closure.php\" target=\"_blank\" rel=\"noopener noreferrer\">Closure<OutboundLink/></a>）</strong>，该闭包接收一个参数 <code>$message</code> 为消息对象（Collection），这里需要注意的时，与 2.0 不同，2.0 当中我们对消息与事件做了区分，还对消息进行了分类（按 MsgType）。在 3.0 后，<strong>所有的消息包括事件都会使用 <code>setMessageHandler</code> 来处理</strong>，也就是说你可能需要在里面进行一些判断，例如：</p>\n<div class=\"language-php ext-php line-numbers-mode\"><pre v-pre class=\"language-php\"><code><span class=\"token variable\">$server</span><span class=\"token operator\">-></span><span class=\"token function\">setMessageHandler</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$message</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$message</span><span class=\"token operator\">-></span><span class=\"token property\">MsgType</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string single-quoted-string\">'event'</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string single-quoted-string\">'收到事件消息'</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string single-quoted-string\">'text'</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string single-quoted-string\">'收到文字消息'</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string single-quoted-string\">'image'</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string single-quoted-string\">'收到图片消息'</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string single-quoted-string\">'voice'</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string single-quoted-string\">'收到语音消息'</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string single-quoted-string\">'video'</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string single-quoted-string\">'收到视频消息'</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string single-quoted-string\">'location'</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string single-quoted-string\">'收到坐标消息'</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string single-quoted-string\">'link'</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string single-quoted-string\">'收到链接消息'</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// ... 其它消息</span>\n        <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string single-quoted-string\">'收到其它消息'</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br><span class=\"line-number\">15</span><br><span class=\"line-number\">16</span><br><span class=\"line-number\">17</span><br><span class=\"line-number\">18</span><br><span class=\"line-number\">19</span><br><span class=\"line-number\">20</span><br><span class=\"line-number\">21</span><br><span class=\"line-number\">22</span><br><span class=\"line-number\">23</span><br><span class=\"line-number\">24</span><br><span class=\"line-number\">25</span><br><span class=\"line-number\">26</span><br><span class=\"line-number\">27</span><br><span class=\"line-number\">28</span><br><span class=\"line-number\">29</span><br><span class=\"line-number\">30</span><br><span class=\"line-number\">31</span><br></div></div><p>当然，因为这里 <code>setMessageHandler</code> 接收一个 <a href=\"http://php.net/manual/zh/language.types.callable.php\" target=\"_blank\" rel=\"noopener noreferrer\"><code>callable</code><OutboundLink/></a> 的参数，所以你不一定要传入一个 Closure 闭包，你可以选择传入一个函数名，一个 <code>[$class, $method]</code> 或者 <code>Foo::bar</code> 这样的类型。</p>\n<blockquote>\n<p>❤️ 注意，默认没有验证是否为微信的请求，部署上线建议关掉 debug 模式。</p>\n</blockquote>\n<p>某些情况，我们需要直接使用 <code>$message</code> 参数，那么怎么在 <code>setMessageHandler</code> 闭包外调用呢？</p>\n<div class=\"language-php ext-php line-numbers-mode\"><pre v-pre class=\"language-php\"><code>    <span class=\"token variable\">$message</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$server</span><span class=\"token operator\">-></span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br></div></div><blockquote>\n<p>注意：<code>$message</code> 是一个数组类型的数据，使用的时候这样使用：<code>$message['ToUserName']</code></p>\n</blockquote>\n<h2 id=\"请求消息的属性\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#请求消息的属性\" aria-hidden=\"true\">#</a> 请求消息的属性</h2>\n<p>当你接收到用户发来的消息时，可能会提取消息中的相关属性，那么请参考：</p>\n<p>请求消息基本属性(以下所有消息都有的基本属性)：</p>\n<pre><code>$message-&gt;ToUserName    接收方帐号（该公众号 ID）\n$message-&gt;FromUserName  发送方帐号（OpenID, 代表用户的唯一标识）\n$message-&gt;CreateTime    消息创建时间（时间戳）\n$message-&gt;MsgId         消息 ID（64位整型）\n</code></pre>\n<h3 id=\"文本\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#文本\" aria-hidden=\"true\">#</a> 文本：</h3>\n<pre><code>$message-&gt;MsgType  text\n$message-&gt;Content  文本消息内容\n</code></pre>\n<h3 id=\"图片\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#图片\" aria-hidden=\"true\">#</a> 图片：</h3>\n<pre><code>$message-&gt;MsgType  image\n$message-&gt;PicUrl   图片链接\n</code></pre>\n<h3 id=\"语音\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#语音\" aria-hidden=\"true\">#</a> 语音：</h3>\n<pre><code>$message-&gt;MsgType        voice\n$message-&gt;MediaId        语音消息媒体id，可以调用多媒体文件下载接口拉取数据。\n$message-&gt;Format         语音格式，如 amr，speex 等\n$message-&gt;Recognition * 开通语音识别后才有\n\n&gt; 请注意，开通语音识别后，用户每次发送语音给公众号时，微信会在推送的语音消息XML数据包中，增加一个 `Recongnition` 字段\n</code></pre>\n<h3 id=\"视频\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#视频\" aria-hidden=\"true\">#</a> 视频：</h3>\n<pre><code>$message-&gt;MsgType       video\n$message-&gt;MediaId       视频消息媒体id，可以调用多媒体文件下载接口拉取数据。\n$message-&gt;ThumbMediaId  视频消息缩略图的媒体id，可以调用多媒体文件下载接口拉取数据。\n</code></pre>\n<h3 id=\"小视频\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#小视频\" aria-hidden=\"true\">#</a> 小视频：</h3>\n<pre><code>$message-&gt;MsgType     shortvideo\n$message-&gt;MediaId     视频消息媒体id，可以调用多媒体文件下载接口拉取数据。\n$message-&gt;ThumbMediaId    视频消息缩略图的媒体id，可以调用多媒体文件下载接口拉取数据。\n</code></pre>\n<h3 id=\"事件\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#事件\" aria-hidden=\"true\">#</a> 事件：</h3>\n<pre><code>$message-&gt;MsgType     event\n$message-&gt;Event       事件类型 （如：subscribe(订阅)、unsubscribe(取消订阅) ...， CLICK 等）\n\n# 扫描带参数二维码事件\n$message-&gt;EventKey    事件KEY值，比如：qrscene_123123，qrscene_为前缀，后面为二维码的参数值\n$message-&gt;Ticket      二维码的 ticket，可用来换取二维码图片\n\n# 上报地理位置事件\n$message-&gt;Latitude    23.137466   地理位置纬度\n$message-&gt;Longitude   113.352425  地理位置经度\n$message-&gt;Precision   119.385040  地理位置精度\n\n# 自定义菜单事件\n$message-&gt;EventKey    事件KEY值，与自定义菜单接口中KEY值对应，如：CUSTOM_KEY_001, www.qq.com\n</code></pre>\n<h3 id=\"地理位置\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#地理位置\" aria-hidden=\"true\">#</a> 地理位置：</h3>\n<pre><code>$message-&gt;MsgType     location\n$message-&gt;Location_X  地理位置纬度\n$message-&gt;Location_Y  地理位置经度\n$message-&gt;Scale       地图缩放大小\n$message-&gt;Label       地理位置信息\n</code></pre>\n<h3 id=\"链接\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#链接\" aria-hidden=\"true\">#</a> 链接：</h3>\n<pre><code>$message-&gt;MsgType      link\n$message-&gt;Title        消息标题\n$message-&gt;Description  消息描述\n$message-&gt;Url          消息链接\n</code></pre>\n<h2 id=\"回复消息\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#回复消息\" aria-hidden=\"true\">#</a> 回复消息</h2>\n<p>回复的消息可以为 <code>null</code>，此时 SDK 会返回给微信一个 &quot;SUCCESS&quot;，你也可以回复一个普通字符串，比如：<code>欢迎关注 overtrue.</code>，此时 SDK 会对它进行一个封装，产生一个 <a href=\"https://github.com/EasyWeChat/message/blob/master/src/Text.php\" target=\"_blank\" rel=\"noopener noreferrer\"><code>EasyWeChat\\Message\\Text</code><OutboundLink/></a> 类型的消息并在最后的 <code>$server-&gt;serve();</code> 时生成对应的消息 XML 格式。</p>\n<p>如果你想返回一个自己手动拼的原生 XML 格式消息，请返回一个 <a href=\"https://github.com/EasyWeChat/message/blob/master/src/Raw.php\" target=\"_blank\" rel=\"noopener noreferrer\"><code>EasyWeChat\\Message\\Raw</code><OutboundLink/></a> 实例即可。</p>\n<h2 id=\"消息转发给客服系统\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#消息转发给客服系统\" aria-hidden=\"true\">#</a> 消息转发给客服系统</h2>\n<p>参见：<RouterLink to=\"/3.x/message-transfer.html\">多客服消息转发</RouterLink></p>\n<p>关于消息的使用，请参考 <RouterLink to=\"/3.x/messages.html\"><code>消息</code></RouterLink> 章节。</p>\n","import { render } from \"./server.html.vue?vue&type=template&id=1ebead08\"\nconst script = {}\nscript.render = render\n\nexport default script"],"names":["data","id","tabindex","class","href","target","rel","to"],"sourceRoot":""}