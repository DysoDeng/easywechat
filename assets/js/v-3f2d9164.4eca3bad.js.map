{"version":3,"file":"assets/js/v-3f2d9164.4eca3bad.js","mappings":"gHAAO,MAAMA,EAAO,CAClB,IAAO,aACP,KAAQ,6BACR,MAAS,GACT,KAAQ,QACR,YAAe,GACf,QAAW,GACX,QAAW,CACT,CACE,MAAS,EACT,MAAS,OACT,KAAQ,OACR,SAAY,CACV,CACE,MAAS,EACT,MAAS,uBACT,KAAQ,uBACR,SAAY,IAEd,CACE,MAAS,EACT,MAAS,qBACT,KAAQ,qBACR,SAAY,OAKpB,iBAAoB,0BACpB,IAAO,CACL,YAAe,aACf,aAAgB,M,qEC/BpB,wsD,GAAA,QAkBG,2B,GAA0BC,KAAK,6DAA6DC,OAAO,SAASC,IAAI,uB,GAlBnH,QAkByI,U,GAlBzI,QAkBkK,Y,GAAQ,OAAsB,YAAhB,aAAS,G,GAlBzL,QAkBgM,sB,GAlBhM,4jH,GAAA,QAiC+kB,qB,GAAiB,OAAuB,cAAf,UAAM,G,GAjC9mB,QAiCunB,Y,GAAWF,KAAK,8DAA8DC,OAAO,SAASC,IAAI,uB,GAjCztB,QAiC+uB,Y,GAjC/uB,QAiC0wB,c,GAC1wB,OAA8I,MAA1IC,GAAG,qBAAqBC,SAAS,M,EAAK,OAA4E,KAAzEC,MAAM,gBAAgBL,KAAK,sBAAsB,cAAY,QAAO,MAlCjH,QAkCsH,yB,MACtH,OAEa,oBADb,OAAuF,SAApF,sF,MAEH,OAA+H,MAA3HG,GAAG,gBAAgBC,SAAS,M,EAAK,OAAuE,KAApEC,MAAM,gBAAgBL,KAAK,iBAAiB,cAAY,QAAO,MAtCvG,QAsC4G,oB,MAtC5G,QAuCG,M,GAAKA,KAAK,6DAA6DC,OAAO,SAASC,IAAI,uB,GAvC9F,QAuCoH,U,GAvCpH,QAuC6I,S,GAvC7I,q7D,GAAA,QAoDG,c,GAAU,OAAuB,cAAf,UAAM,G,GApD3B,QAoDoC,a,GAAYF,KAAK,8DAA8DC,OAAO,SAASC,IAAI,uB,GApDvI,QAoD6J,Y,GApD7J,QAoDwL,cChDxL,EAHe,CACf,O,iEDFA,sBAkBA,OAAsN,UAlBtN,GAkB0B,OAAwI,IAAxI,EAAwI,CAlBlK,GAkB+I,QAAe,KAlB9J,EAkB0K,EAlB1K,IAmBA,GAc4kB,OAA4M,UAjCxxB,EAiCgmB,EAjChmB,GAiC+nB,OAA2I,IAA3I,EAA2I,CAjC1wB,GAiCuvB,QAAe,KAjCtwB,IAkCA,EACA,EAGA,GACA,OAAsJ,UAvCtJ,GAuCK,OAAwI,IAAxI,EAAwI,CAvC7I,GAuC0H,QAAe,KAvCzI,IAwCA,GAYA,OAAsM,UApDtM,EAoDa,EApDb,GAoD6C,OAA2I,IAA3I,EAA2I,CApDxL,GAoDqK,QAAe,KApDpL,K","sources":["webpack:///./.vuepress/.temp/pages/4.x/payment/scan-pay.html.js","webpack:///./.vuepress/.temp/pages/4.x/payment/scan-pay.html.vue","webpack:///./.vuepress/.temp/pages/4.x/payment/scan-pay.html.vue?f063"],"sourcesContent":["export const data = {\n  \"key\": \"v-3f2d9164\",\n  \"path\": \"/4.x/payment/scan-pay.html\",\n  \"title\": \"\",\n  \"lang\": \"en-US\",\n  \"frontmatter\": {},\n  \"excerpt\": \"\",\n  \"headers\": [\n    {\n      \"level\": 2,\n      \"title\": \"扫码支付\",\n      \"slug\": \"扫码支付\",\n      \"children\": [\n        {\n          \"level\": 3,\n          \"title\": \"模式一：先生成产品二维码，扫码下单后支付\",\n          \"slug\": \"模式一-先生成产品二维码-扫码下单后支付\",\n          \"children\": []\n        },\n        {\n          \"level\": 3,\n          \"title\": \"模式二：先下单，生成订单后创建二维码\",\n          \"slug\": \"模式二-先下单-生成订单后创建二维码\",\n          \"children\": []\n        }\n      ]\n    }\n  ],\n  \"filePathRelative\": \"4.x/payment/scan-pay.md\",\n  \"git\": {\n    \"updatedTime\": 1629906046000,\n    \"contributors\": []\n  }\n}\n","<h2 id=\"扫码支付\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#扫码支付\" aria-hidden=\"true\">#</a> 扫码支付</h2>\n<h3 id=\"模式一-先生成产品二维码-扫码下单后支付\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#模式一-先生成产品二维码-扫码下单后支付\" aria-hidden=\"true\">#</a> 模式一：先生成产品二维码，扫码下单后支付</h3>\n<blockquote>\n<p>{warning} 请务必先熟悉流程：https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=6_4</p>\n</blockquote>\n<h4 id=\"生成产品二维码内容\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#生成产品二维码内容\" aria-hidden=\"true\">#</a> 生成产品二维码内容</h4>\n<div class=\"language-php ext-php line-numbers-mode\"><pre v-pre class=\"language-php\"><code><span class=\"token variable\">$content</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$app</span><span class=\"token operator\">-></span><span class=\"token function\">scheme</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$productId</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// $productId 为你的产品/商品ID，用于回调时带回，自己识别即可</span>\n\n<span class=\"token comment\">//结果示例：weixin://wxpay/bizpayurl?sign=XXXXX&amp;appid=XXXXX&amp;mch_id=XXXXX&amp;product_id=XXXXXX&amp;time_stamp=XXXXXX&amp;nonce_str=XXXXX</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div></div><p>将 <code>$content</code> 生成二维码，SDK 并不内置二维码生成库，使用你熟悉的工具创建二维码即可，比如 PHP 部分有以下工具可以选择：</p>\n<blockquote>\n<ul>\n<li>https://github.com/endroid/qr-code</li>\n<li>https://github.com/SimpleSoftwareIO/simple-qrcode</li>\n<li>https://github.com/aferrandini/PHPQRCode</li>\n</ul>\n</blockquote>\n<h4 id=\"处理回调\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#处理回调\" aria-hidden=\"true\">#</a> 处理回调</h4>\n<p>当用户扫码时，你的回调接口会收到一个通知，调用<a href=\"https://www.easywechat.com/docs/master/zh-CN/payment/order\" target=\"_blank\" rel=\"noopener noreferrer\">统一下单接口<OutboundLink/></a>创建订单后返回 <code>prepay_id</code>，你可以使用下面的代码处理扫码通知：</p>\n<div class=\"language-php ext-php line-numbers-mode\"><pre v-pre class=\"language-php\"><code><span class=\"token comment\">// 扫码支付通知接收第三个参数 `$alert`，如果触发该函数，会返回“业务错误”到微信服务器，触发 `$fail` 则返回“通信错误”</span>\n<span class=\"token variable\">$response</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$app</span><span class=\"token operator\">-></span><span class=\"token function\">handleScannedNotify</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$message</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$fail</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$alert</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">use</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$app</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 如：$alert('商品已售空');</span>\n    <span class=\"token comment\">// 如业务流程正常，则要调用“统一下单”接口，并返回 prepay_id 字符串，代码如下</span>\n    <span class=\"token variable\">$result</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$app</span><span class=\"token operator\">-></span><span class=\"token property\">order</span><span class=\"token operator\">-></span><span class=\"token function\">unify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n        <span class=\"token string single-quoted-string\">'trade_type'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'NATIVE'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string single-quoted-string\">'product_id'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$message</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'product_id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// $message['product_id'] 则为生成二维码时的产品 ID</span>\n        <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token variable\">$result</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'prepay_id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$response</span><span class=\"token operator\">-></span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br></div></div><p>用户在手机上付完钱以后，你会再收到<strong>付款结果通知</strong>，这时候请参考：<a href=\"https://www.easywechat.com/docs/master/zh-CN/payment/notify\" target=\"_blank\" rel=\"noopener noreferrer\">处理微信支付通知<OutboundLink/></a> 更新您的订单状态。</p>\n<h3 id=\"模式二-先下单-生成订单后创建二维码\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#模式二-先下单-生成订单后创建二维码\" aria-hidden=\"true\">#</a> 模式二：先下单，生成订单后创建二维码</h3>\n<blockquote>\n<p>{warning} 请务必先熟悉流程：https://pay.weixin.qq.com/wiki/doc/api/native.php?chapter=6_5</p>\n</blockquote>\n<h4 id=\"根据用户选购的商品生成订单\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#根据用户选购的商品生成订单\" aria-hidden=\"true\">#</a> 根据用户选购的商品生成订单</h4>\n<p>调用<a href=\"https://www.easywechat.com/docs/master/zh-CN/payment/order\" target=\"_blank\" rel=\"noopener noreferrer\">统一下单接口<OutboundLink/></a>创建订单：</p>\n<div class=\"language-php ext-php line-numbers-mode\"><pre v-pre class=\"language-php\"><code><span class=\"token variable\">$result</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$app</span><span class=\"token operator\">-></span><span class=\"token property\">order</span><span class=\"token operator\">-></span><span class=\"token function\">unify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n      <span class=\"token string single-quoted-string\">'trade_type'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'NATIVE'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string single-quoted-string\">'product_id'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$message</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'product_id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// $message['product_id'] 则为生成二维码时的产品 ID</span>\n      <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br></div></div><h4 id=\"生成二维码\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#生成二维码\" aria-hidden=\"true\">#</a> 生成二维码</h4>\n<blockquote>\n<p>{info} 版本 4.1.7+ 支持</p>\n</blockquote>\n<p>从上一步得到的 <code>$result['code_url']</code> 得到二维码内容：</p>\n<p>将 <code>$result['code_url']</code> 生成二维码图片向用户展示即可扫码，生成工具上面自己找一下即可。 SDK 不内置</p>\n<h4 id=\"支付通知\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#支付通知\" aria-hidden=\"true\">#</a> 支付通知</h4>\n<p>这种方式的通知就只有<strong>付款结果通知</strong>了，这时候请参考：<a href=\"https://www.easywechat.com/docs/master/zh-CN/payment/notify\" target=\"_blank\" rel=\"noopener noreferrer\">处理微信支付通知<OutboundLink/></a> 更新您的订单状态。</p>\n","import { render } from \"./scan-pay.html.vue?vue&type=template&id=24bb63f8\"\nconst script = {}\nscript.render = render\n\nexport default script"],"names":["data","href","target","rel","id","tabindex","class"],"sourceRoot":""}